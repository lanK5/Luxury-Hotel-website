var _PROJECT_ID = '82bfd5fe77e1123f4804f63f730f9af9';
var _DEBUG = false;

var eventProperties;

(function(f,b){if(!b.__SV){var e,g,i,h;window.mixpanel=b;b._i=[];b.init=function(e,f,c){function g(a,d){var b=d.split(".");2==b.length&&(a=a[b[0]],d=b[1]);a[d]=function(){a.push([d].concat(Array.prototype.slice.call(arguments,0)))}}var a=b;"undefined"!==typeof c?a=b[c]=[]:c="mixpanel";a.people=a.people||[];a.toString=function(a){var d="mixpanel";"mixpanel"!==c&&(d+="."+c);a||(d+=" (stub)");return d};a.people.toString=function(){return a.toString(1)+".people (stub)"};i="disable time_event track track_pageview track_links track_forms track_with_groups add_group set_group remove_group register register_once alias unregister identify name_tag set_config reset opt_in_tracking opt_out_tracking has_opted_in_tracking has_opted_out_tracking clear_opt_in_out_tracking start_batch_senders people.set people.set_once people.unset people.increment people.append people.union people.track_charge people.clear_charges people.delete_user people.remove".split(" ");
for(h=0;h<i.length;h++)g(a,i[h]);var j="set set_once union unset remove delete".split(" ");a.get_group=function(){function b(c){d[c]=function(){call2_args=arguments;call2=[c].concat(Array.prototype.slice.call(call2_args,0));a.push([e,call2])}}for(var d={},e=["get_group"].concat(Array.prototype.slice.call(arguments,0)),c=0;c<j.length;c++)b(j[c]);return d};b._i.push([e,f,c])};b.__SV=1.2;e=f.createElement("script");e.type="text/javascript";e.async=!0;e.src="undefined"!==typeof MIXPANEL_CUSTOM_LIB_URL?
MIXPANEL_CUSTOM_LIB_URL:"file:"===f.location.protocol&&"//cdn.mxpnl.com/libs/mixpanel-2-latest.min.js".match(/^\/\//)?"https://cdn.mxpnl.com/libs/mixpanel-2-latest.min.js":"//cdn.mxpnl.com/libs/mixpanel-2-latest.min.js";g=f.getElementsByTagName("script")[0];g.parentNode.insertBefore(e,g)}})(document,window.mixpanel||[]);
	
try { 
	mixpanel.init(_PROJECT_ID, {ignore_dnt: true, debug: _DEBUG});
	
	$("#menu-top-1 h1").on("click", function() {
		trackEvent('Formsite_Home');
	});
} catch(e) {
	if(_DEBUG) {
		console.log(e);
	}
}
	
function sessionInit(distinct_id, accountId, name, email, plan, createDate) {
	try {
		mixpanel.identify(distinct_id);
		mixpanel.people.set({
			"$distinct_id": distinct_id,
			"$email": email,
			"$name": name,
			"$plan": plan,
			"$createDate": createDate,
			"$accountId": accountId
		});
	} catch(e) {
		if(_DEBUG) {
			console.log(e);
		}
	}
}
	
function register(signupJson) {
	try {
		if(signupJson) {
			mixpanel.people.set_once(signupJson);
			mixpanel.register(signupJson);
		} else {
			if(_DEBUG) {
				console.log('signup details empty');
			}
		}
	} catch(e) {
		if(_DEBUG) {
			console.log(e);
		}
	}
}
	
function trackEvent(formId, menuSelector1, menuSelector2, menuSelector3) {
	try{
		var eventName;
		var menu1 = $(menuSelector1).text().replace(/[^A-Za-z]/g, '');
		if(menu1) {
			var menu2 = $(menuSelector2).text().replace(/[^A-Za-z]/g, '');
			var menu3 = $(menuSelector3).text().replace(/[^A-Za-z]/g, '');
			eventName = menu1 + (menu2 && (menu1 != menu2) ? "_" + menu2 : "") + (menu3 && (menu2 != menu3) && !(menu1 == menu3 && menu2 === "") ? "_" + menu3 : "");
		} else {
			eventName = formId;
		}
		
		if(_DEBUG) {
			console.log(eventName);
		}
		mixpanel.track(eventName, eventProperties);
		
		if(eventProperties && eventProperties.userNbr && eventProperties.plan) {
			mixpanel.identify(eventProperties.userNbr);
			mixpanel.people.set({
				"$distinct_id": eventProperties.userNbr,
				"$plan": eventProperties.plan
			});
		}
	} catch(e) {
		if(_DEBUG) {
			console.log(e);
		}
	}
}
